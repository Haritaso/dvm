name: Main workflow

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        node-version:
          - 13.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install libcurl4-openssl-dev package for Ubuntu
        if: runner.os == 'Linux'
        run: sudo apt-get install libcurl4-openssl-dev

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore esy cache
        uses: actions/cache@v1
        id: esy
        with:
          path: ~/.esy
          key: ${{ runner.os }}-esy-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            ${{ runner.os }}-esy-

      - name: Install esy
        run: npm install --global esy

      - name: Install and build opam packages
        run: esy

      - name: Copy and rename binary
        run: cp _build/default/src/dvm.exe ./dvm

      - name: Upload binary to artifact
        uses: actions/upload-artifact@v1
        with:
          name: dvm-${{ matrix.os }}
          path: dvm

      - name: Prepare release asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: tar -zcvf dvm-x86_64-${{ matrix.os }}.tar.gz dvm

      - name: Create release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dvm-x86_64-${{ matrix.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
